{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "AddressMatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AXIOM_V2_QUERY_GOERLI_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "validate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61038b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063207c64fb1461005c578063715018a6146100715780638da5cb5b14610079578063f2fde38b146100a2578063fab82535146100b5575b600080fd5b61006f61006a366004610325565b6100d0565b005b61006f6101ee565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100b0366004610325565b610202565b6100867318d8a359c23bebc4b5a0d116f792172a114a1fb781565b337318d8a359c23bebc4b5a0d116f792172a114a1fb71461014b5760405162461bcd60e51b815260206004820152602a60248201527f41646472657373436865636b65723a2073656e646572206973206e6f74204178604482015269696f6d5632517565727960b01b60648201526084015b60405180910390fd5b6000546001600160a01b038281169116146101b75760405162461bcd60e51b815260206004820152602660248201527f41646472657373436865636b65723a206164647265737320646f6573206e6f74604482015265040dac2e8c6d60d31b6064820152608401610142565b6040516001600160a01b038216907f8b3bd8657eca51fe1c2e024349c2569ee0faad17cb7b0978665469116a18446d90600090a250565b6101f661027b565b61020060006102d5565b565b61020a61027b565b6001600160a01b03811661026f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610142565b610278816102d5565b50565b6000546001600160a01b031633146102005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610142565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033757600080fd5b81356001600160a01b038116811461034e57600080fd5b939250505056fea264697066735822122018b89014d77e02e044e3a61434e67298e6f1cb69439759661deb0d9e278359fe64736f6c63430008150033",
    "sourceMap": "136:480:22:-:0;;;327:16;;;;;;;;;-1:-1:-1;936:32:19;719:10:20;936:18:19;:32::i;:::-;136:480:22;;2426:187:19;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:19;;;-1:-1:-1;;;;;;2534:17:19;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;136:480:22:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063207c64fb1461005c578063715018a6146100715780638da5cb5b14610079578063f2fde38b146100a2578063fab82535146100b5575b600080fd5b61006f61006a366004610325565b6100d0565b005b61006f6101ee565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100b0366004610325565b610202565b6100867318d8a359c23bebc4b5a0d116f792172a114a1fb781565b337318d8a359c23bebc4b5a0d116f792172a114a1fb71461014b5760405162461bcd60e51b815260206004820152602a60248201527f41646472657373436865636b65723a2073656e646572206973206e6f74204178604482015269696f6d5632517565727960b01b60648201526084015b60405180910390fd5b6000546001600160a01b038281169116146101b75760405162461bcd60e51b815260206004820152602660248201527f41646472657373436865636b65723a206164647265737320646f6573206e6f74604482015265040dac2e8c6d60d31b6064820152608401610142565b6040516001600160a01b038216907f8b3bd8657eca51fe1c2e024349c2569ee0faad17cb7b0978665469116a18446d90600090a250565b6101f661027b565b61020060006102d5565b565b61020a61027b565b6001600160a01b03811661026f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610142565b610278816102d5565b50565b6000546001600160a01b031633146102005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610142565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033757600080fd5b81356001600160a01b038116811461034e57600080fd5b939250505056fea264697066735822122018b89014d77e02e044e3a61434e67298e6f1cb69439759661deb0d9e278359fe64736f6c63430008150033",
    "sourceMap": "136:480:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:265;;;;;;:::i;:::-;;:::i;:::-;;1824:101:19;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:19;1201:85;;;-1:-1:-1;;;;;469:32:24;;;451:51;;439:2;424:18;1201:85:19;;;;;;;2074:198;;;;;;:::i;:::-;;:::i;225:95:22:-;;278:42;225:95;;349:265;409:10;278:42;409:40;401:95;;;;-1:-1:-1;;;401:95:22;;715:2:24;401:95:22;;;697:21:24;754:2;734:18;;;727:30;793:34;773:18;;;766:62;-1:-1:-1;;;844:18:24;;;837:40;894:19;;401:95:22;;;;;;;;;1247:7:19;1273:6;-1:-1:-1;;;;;514:16:22;;;1273:6:19;;514:16:22;506:67;;;;-1:-1:-1;;;506:67:22;;1126:2:24;506:67:22;;;1108:21:24;1165:2;1145:18;;;1138:30;1204:34;1184:18;;;1177:62;-1:-1:-1;;;1255:18:24;;;1248:36;1301:19;;506:67:22;924:402:24;506:67:22;588:19;;-1:-1:-1;;;;;588:19:22;;;;;;;;349:265;:::o;1824:101:19:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:19;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:19;;1533:2:24;2154:73:19::1;::::0;::::1;1515:21:24::0;1572:2;1552:18;;;1545:30;1611:34;1591:18;;;1584:62;-1:-1:-1;;;1662:18:24;;;1655:36;1708:19;;2154:73:19::1;1331:402:24::0;2154:73:19::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:19;719:10:20;1422:23:19;1414:68;;;;-1:-1:-1;;;1414:68:19;;1940:2:24;1414:68:19;;;1922:21:24;;;1959:18;;;1952:30;2018:34;1998:18;;;1991:62;2070:18;;1414:68:19;1738:356:24;2426:187:19;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:19;;;-1:-1:-1;;;;;;2534:17:19;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:286:24:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:24;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:24:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "AXIOM_V2_QUERY_GOERLI_ADDR()": "fab82535",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "validate(address)": "207c64fb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"AddressMatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AXIOM_V2_QUERY_GOERLI_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AddressChecker.sol\":\"AddressChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/AddressChecker.sol\":{\"keccak256\":\"0xaa1317bd25924d49b8433ae1670a9e6cae287b204e971b95448440204df3d5fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://34a1b1ac138bce32c828b23406e0efe702dc1021ad105e02a8bc5efc97b32409\",\"dweb:/ipfs/QmTawQPP6ZLjiAPYqNh2SdHpZbEF4xGkbPXRHHiUk9S4pL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressMatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AXIOM_V2_QUERY_GOERLI_ADDR",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validate"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/AddressChecker.sol": "AddressChecker"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/AddressChecker.sol": {
        "keccak256": "0xaa1317bd25924d49b8433ae1670a9e6cae287b204e971b95448440204df3d5fc",
        "urls": [
          "bzz-raw://34a1b1ac138bce32c828b23406e0efe702dc1021ad105e02a8bc5efc97b32409",
          "dweb:/ipfs/QmTawQPP6ZLjiAPYqNh2SdHpZbEF4xGkbPXRHHiUk9S4pL"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/AddressChecker.sol",
    "id": 43112,
    "exportedSymbols": {
      "AddressChecker": [
        43111
      ],
      "Ownable": [
        43004
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:578:22",
    "nodes": [
      {
        "id": 43069,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 43071,
        "nodeType": "ImportDirective",
        "src": "65:69:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin-contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43112,
        "sourceUnit": 43005,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43070,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43004,
              "src": "74:7:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43111,
        "nodeType": "ContractDefinition",
        "src": "136:480:22",
        "nodes": [
          {
            "id": 43077,
            "nodeType": "EventDefinition",
            "src": "177:42:22",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8b3bd8657eca51fe1c2e024349c2569ee0faad17cb7b0978665469116a18446d",
            "name": "AddressMatch",
            "nameLocation": "183:12:22",
            "parameters": {
              "id": 43076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43075,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "212:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 43077,
                  "src": "196:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "195:23:22"
            }
          },
          {
            "id": 43080,
            "nodeType": "VariableDeclaration",
            "src": "225:95:22",
            "nodes": [],
            "constant": true,
            "functionSelector": "fab82535",
            "mutability": "constant",
            "name": "AXIOM_V2_QUERY_GOERLI_ADDR",
            "nameLocation": "249:26:22",
            "scope": 43111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43078,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831384438613335394332334265626334423541304431313666373932313732613131344131664237",
              "id": 43079,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "278:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x18D8a359C23Bebc4B5A0D116f792172a114A1fB7"
            },
            "visibility": "public"
          },
          {
            "id": 43084,
            "nodeType": "FunctionDefinition",
            "src": "327:16:22",
            "nodes": [],
            "body": {
              "id": 43083,
              "nodeType": "Block",
              "src": "341:2:22",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 43081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:2:22"
            },
            "returnParameters": {
              "id": 43082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:22"
            },
            "scope": 43111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43110,
            "nodeType": "FunctionDefinition",
            "src": "349:265:22",
            "nodes": [],
            "body": {
              "id": 43109,
              "nodeType": "Block",
              "src": "391:223:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43090,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "409:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "413:6:22",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "409:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 43092,
                          "name": "AXIOM_V2_QUERY_GOERLI_ADDR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43080,
                          "src": "423:26:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "409:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373436865636b65723a2073656e646572206973206e6f74204178696f6d56325175657279",
                        "id": 43094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "451:44:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b2f2cf3159003713062d4199af9c36bfaf2075e6480fa681096dfdddfcbdbab",
                          "typeString": "literal_string \"AddressChecker: sender is not AxiomV2Query\""
                        },
                        "value": "AddressChecker: sender is not AxiomV2Query"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b2f2cf3159003713062d4199af9c36bfaf2075e6480fa681096dfdddfcbdbab",
                          "typeString": "literal_string \"AddressChecker: sender is not AxiomV2Query\""
                        }
                      ],
                      "id": 43089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "401:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:95:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43096,
                  "nodeType": "ExpressionStatement",
                  "src": "401:95:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43098,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43086,
                          "src": "514:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43099,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42932,
                            "src": "523:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 43100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "523:7:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "514:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373436865636b65723a206164647265737320646f6573206e6f74206d61746368",
                        "id": 43102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "532:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46041144c6ee4fc96648fd2c442fb1722de5e0c5ada9b1dc135395c4f1e0f470",
                          "typeString": "literal_string \"AddressChecker: address does not match\""
                        },
                        "value": "AddressChecker: address does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46041144c6ee4fc96648fd2c442fb1722de5e0c5ada9b1dc135395c4f1e0f470",
                          "typeString": "literal_string \"AddressChecker: address does not match\""
                        }
                      ],
                      "id": 43097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "506:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "506:67:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43104,
                  "nodeType": "ExpressionStatement",
                  "src": "506:67:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 43106,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43086,
                        "src": "601:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 43105,
                      "name": "AddressMatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43077,
                      "src": "588:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:19:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43108,
                  "nodeType": "EmitStatement",
                  "src": "583:24:22"
                }
              ]
            },
            "functionSelector": "207c64fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "358:8:22",
            "parameters": {
              "id": 43087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43086,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "375:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 43110,
                  "src": "367:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:15:22"
            },
            "returnParameters": {
              "id": 43088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:22"
            },
            "scope": 43111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43072,
              "name": "Ownable",
              "nameLocations": [
                "163:7:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43004,
              "src": "163:7:22"
            },
            "id": 43073,
            "nodeType": "InheritanceSpecifier",
            "src": "163:7:22"
          }
        ],
        "canonicalName": "AddressChecker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43111,
          43004,
          43026
        ],
        "name": "AddressChecker",
        "nameLocation": "145:14:22",
        "scope": 43112,
        "usedErrors": [],
        "usedEvents": [
          42905,
          43077
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}